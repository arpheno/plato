name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-python-${{ matrix.python-version }}-uv-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ matrix.python-version }}-uv-

      - name: Install dependencies
        run: |
          uv venv .venv
          source .venv/bin/activate
          uv pip install -e "packages/plato-core[dev]"
          uv pip install -e "packages/plato-cli[dev]"
          uv pip install -e "packages/plato-api[dev]"

      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          pytest --cov=plato_core --cov=plato_cli --cov=plato_api --cov-report=xml --cov-report=html:coverage_html

      - name: Upload Python coverage report
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage-${{ matrix.python-version }}
          path: coverage_html
          if-no-files-found: error

  test-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: packages/plato-web/package-lock.json

      - name: Install dependencies
        working-directory: packages/plato-web
        run: npm ci

      - name: Run tests with coverage
        working-directory: packages/plato-web
        run: npm run test:coverage

      - name: Upload frontend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-${{ matrix.node-version }}
          path: packages/plato-web/coverage/
          if-no-files-found: error

  publish-coverage:
    needs: [test-python, test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create coverage directory structure
        run: |
          mkdir -p _site/python/3.11
          mkdir -p _site/python/3.12
          mkdir -p _site/frontend/18.x
          mkdir -p _site/frontend/20.x

      - name: Download Python 3.11 coverage
        uses: actions/download-artifact@v4
        with:
          name: python-coverage-3.11
          path: _site/python/3.11/htmlcov

      - name: Download Python 3.12 coverage
        uses: actions/download-artifact@v4
        with:
          name: python-coverage-3.12
          path: _site/python/3.12/htmlcov

      - name: Download Node.js 18.x coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage-18.x
          path: _site/frontend/18.x

      - name: Download Node.js 20.x coverage
        uses: actions/download-artifact@v4
        with:
          name: frontend-coverage-20.x
          path: _site/frontend/20.x

      - name: Create index page
        run: |
          cat > _site/index.html << 'EOL'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Plato Coverage Reports</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
                      line-height: 1.6;
                      max-width: 800px;
                      margin: 0 auto;
                      padding: 2rem;
                  }
                  .coverage-section {
                      margin: 2rem 0;
                      padding: 1rem;
                      border: 1px solid #eee;
                      border-radius: 8px;
                  }
                  h1 { color: #2c3e50; }
                  h2 { color: #42b983; }
                  a {
                      color: #42b983;
                      text-decoration: none;
                  }
                  a:hover { text-decoration: underline; }
              </style>
          </head>
          <body>
              <h1>Plato Coverage Reports</h1>
              <div class="coverage-section">
                  <h2>Python Coverage</h2>
                  <ul>
                      <li><a href="python/3.11/htmlcov/index.html">Python 3.11 Coverage Report</a></li>
                      <li><a href="python/3.12/htmlcov/index.html">Python 3.12 Coverage Report</a></li>
                  </ul>
              </div>
              <div class="coverage-section">
                  <h2>Frontend Coverage</h2>
                  <ul>
                      <li><a href="frontend/18.x/index.html">Node.js 18.x Coverage Report</a></li>
                      <li><a href="frontend/20.x/index.html">Node.js 20.x Coverage Report</a></li>
                  </ul>
              </div>
          </body>
          </html>
          EOL

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-python-3.11-uv-lint-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-python-3.11-uv-lint-

      - name: Install dependencies
        run: |
          uv venv .venv
          source .venv/bin/activate
          uv pip install ruff mypy black

      - name: Run linters
        run: |
          source .venv/bin/activate
          ruff check .
          black --check .
          mypy packages/plato-*/src

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: packages/plato-web/package-lock.json

      - name: Install frontend dependencies
        working-directory: packages/plato-web
        run: npm ci

      - name: Run frontend linters
        working-directory: packages/plato-web
        run: npm run lint

      # Add debug step to verify files
      - name: Debug - List coverage files
        run: |
          echo "Python 3.11 coverage files:"
          ls -la _site/python/3.11/htmlcov || echo "Directory not found"
          echo "Python 3.12 coverage files:"
          ls -la _site/python/3.12/htmlcov || echo "Directory not found"
