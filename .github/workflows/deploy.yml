name: Deploy

on:
  push:
    branches: [main]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push API
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/api.Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/plato-api:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/plato-api:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/plato-api:buildcache,mode=max

      - name: Build and push Web
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/web.Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/plato-web:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/plato-web:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/plato-web:buildcache,mode=max

  deploy-staging:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging.example.com

    steps:
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment"
          # Add your deployment steps here
          # Example: kubectl apply, terraform apply, etc.

      - name: Run integration tests
        run: |
          echo "Running integration tests against staging"
          # Add your integration test steps here

  deploy-production:
    needs: [build, deploy-staging]
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://example.com

    steps:
      - name: Deploy to production
        run: |
          echo "Deploying to production environment"
          # Add your deployment steps here
          # Example: kubectl apply, terraform apply, etc.

      - name: Run smoke tests
        run: |
          echo "Running smoke tests against production"
          # Add your smoke test steps here

      - name: Monitor deployment
        run: |
          echo "Monitoring deployment health"
          # Add your monitoring steps here
